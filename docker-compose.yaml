version: '3.8'

services:

  app-constructor-site:
    build: ./app-constructor-site
    ports:
      - ${SITE_PORT}:${SITE_PORT}
    depends_on:
      - app-constructor-backend
    environment:
      - HOST="${HOST}"
      - REDIRECT_URL="${REDIRECT_URL}"
      - SITE_PORT="${SITE_PORT}"

    ports:
        - "8080:8080"
    command: "http-server dist --proxy http://127.0.0.1:8080?"

  app-constructor-backend:
    build: ./app-constructor-backend
    command: ./script/waiting-for-postgres.sh db
    command: bash -c "./app-constructor-backend"
    ports:
      - ${SERVER_PORT}:${SERVER_PORT}
    depends_on:
      - db
      - redis
    environment:
      - SECRET_JWT=${SECRET_JWT}
      - CLIENT_ID=${CLIENT_ID}
      - CLIENT_SECRET=${CLIENT_SECRET}
      - HOST=${HOST}
      - REDIRECT_URL=${REDIRECT_URL}
      - SERVER_PORT=${SERVER_PORT}
      - POSTGRES_NAME="${POSTGRES_NAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_USERNAME=${DB_USERNAME}
      - POSTGRES_NAME=${POSTGRES_NAME}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_SSL_MODE=${DB_SSL_MODE}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_HOST=${REDIS_HOST}


  db:
    container_name: ${POSTGRES_NAME}
    restart: always
    image: postgres
    volumes:
      - ./app-constructor-backend/.database/postgres/data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - 5436:${DB_PORT}
  
  redis:
    image: 'redis:4-alpine'
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - '6379:6379'
      
